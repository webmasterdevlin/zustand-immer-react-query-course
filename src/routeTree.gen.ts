/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

import { Route as rootRouteImport } from './routes/__root'
import { Route as TableRouteImport } from './routes/table'
import { Route as HeroesRouteImport } from './routes/heroes'
import { Route as IndexRouteImport } from './routes/index'
import { Route as VillainsIndexRouteImport } from './routes/villains/index'

const SignUpLazyRouteImport = createFileRoute('/sign-up')()
const SignInLazyRouteImport = createFileRoute('/sign-in')()
const AntiHeroesLazyRouteImport = createFileRoute('/anti-heroes')()

const SignUpLazyRoute = SignUpLazyRouteImport.update({
  id: '/sign-up',
  path: '/sign-up',
  getParentRoute: () => rootRouteImport,
} as any).lazy(() => import('./routes/sign-up.lazy').then((d) => d.Route))
const SignInLazyRoute = SignInLazyRouteImport.update({
  id: '/sign-in',
  path: '/sign-in',
  getParentRoute: () => rootRouteImport,
} as any).lazy(() => import('./routes/sign-in.lazy').then((d) => d.Route))
const AntiHeroesLazyRoute = AntiHeroesLazyRouteImport.update({
  id: '/anti-heroes',
  path: '/anti-heroes',
  getParentRoute: () => rootRouteImport,
} as any).lazy(() => import('./routes/anti-heroes.lazy').then((d) => d.Route))
const TableRoute = TableRouteImport.update({
  id: '/table',
  path: '/table',
  getParentRoute: () => rootRouteImport,
} as any)
const HeroesRoute = HeroesRouteImport.update({
  id: '/heroes',
  path: '/heroes',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const VillainsIndexRoute = VillainsIndexRouteImport.update({
  id: '/villains/',
  path: '/villains/',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/heroes': typeof HeroesRoute
  '/table': typeof TableRoute
  '/anti-heroes': typeof AntiHeroesLazyRoute
  '/sign-in': typeof SignInLazyRoute
  '/sign-up': typeof SignUpLazyRoute
  '/villains': typeof VillainsIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/heroes': typeof HeroesRoute
  '/table': typeof TableRoute
  '/anti-heroes': typeof AntiHeroesLazyRoute
  '/sign-in': typeof SignInLazyRoute
  '/sign-up': typeof SignUpLazyRoute
  '/villains': typeof VillainsIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/heroes': typeof HeroesRoute
  '/table': typeof TableRoute
  '/anti-heroes': typeof AntiHeroesLazyRoute
  '/sign-in': typeof SignInLazyRoute
  '/sign-up': typeof SignUpLazyRoute
  '/villains/': typeof VillainsIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/heroes'
    | '/table'
    | '/anti-heroes'
    | '/sign-in'
    | '/sign-up'
    | '/villains'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/heroes'
    | '/table'
    | '/anti-heroes'
    | '/sign-in'
    | '/sign-up'
    | '/villains'
  id:
    | '__root__'
    | '/'
    | '/heroes'
    | '/table'
    | '/anti-heroes'
    | '/sign-in'
    | '/sign-up'
    | '/villains/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  HeroesRoute: typeof HeroesRoute
  TableRoute: typeof TableRoute
  AntiHeroesLazyRoute: typeof AntiHeroesLazyRoute
  SignInLazyRoute: typeof SignInLazyRoute
  SignUpLazyRoute: typeof SignUpLazyRoute
  VillainsIndexRoute: typeof VillainsIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/sign-up': {
      id: '/sign-up'
      path: '/sign-up'
      fullPath: '/sign-up'
      preLoaderRoute: typeof SignUpLazyRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/sign-in': {
      id: '/sign-in'
      path: '/sign-in'
      fullPath: '/sign-in'
      preLoaderRoute: typeof SignInLazyRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/anti-heroes': {
      id: '/anti-heroes'
      path: '/anti-heroes'
      fullPath: '/anti-heroes'
      preLoaderRoute: typeof AntiHeroesLazyRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/table': {
      id: '/table'
      path: '/table'
      fullPath: '/table'
      preLoaderRoute: typeof TableRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/heroes': {
      id: '/heroes'
      path: '/heroes'
      fullPath: '/heroes'
      preLoaderRoute: typeof HeroesRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/villains/': {
      id: '/villains/'
      path: '/villains'
      fullPath: '/villains'
      preLoaderRoute: typeof VillainsIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  HeroesRoute: HeroesRoute,
  TableRoute: TableRoute,
  AntiHeroesLazyRoute: AntiHeroesLazyRoute,
  SignInLazyRoute: SignInLazyRoute,
  SignUpLazyRoute: SignUpLazyRoute,
  VillainsIndexRoute: VillainsIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
